TITLE:: SerialOSCClient
summary:: (SuperCollider Support for SerialOSCClient devices?)
categories:: External Control
related:: Guides/UsingSerialOSCClient, Classes/MIDIClient

DESCRIPTION::
(put long description here)

TODO: Look at MIDIClient

OSC routing is handled internally alleviating the need to use OSCdefs to listen to and respond to events from SerialOSC devices. 



CLASSMETHODS::

METHOD:: init
Initializes SerialOSCClient and updates the code::devices:: list with currently attached devices. This method is asynchronous. It will call completionFunc once completed.

ARGUMENT:: completionFunc
Func to evaluate after initialization is completed.

ARGUMENT:: autoconnect
Whether to automatically connect discovered attached devices to SerialOSCClient. The default is true.

ARGUMENT:: supportHotPlugging
Whether to listen to changes when devices are attached and detached from the computer and update code::devices:: list continuously. The default is true.

When this is false a new call to code::init:: is needed to refresh the devices list.

ARGUMENT:: verbose
Print extended information to the Post Window. The default is false.

METHOD:: initialized
Answers whether SerialOSCClient is initialized

returns:: A Boolean

METHOD:: devices
A list of devices currently attached to the computer as detected by SerialOSCClient.

returns:: An array of SerialOSCGrid and SerialOSCEnc instances

METHOD:: postDevices
Print devices list

METHOD:: connectedDevices
A list of devices currently connected to SerialOSCClient.

returns:: An array of SerialOSCGrid and SerialOSCEnc instances

METHOD:: connect
Connects a device to SerialOSCClient. SerialOSCClient responders only work with devices connected to SerialOSCClient.

ARGUMENT:: device
Device to connect

METHOD:: disconnect
Disconnects a device from SerialOSCClient. The disconnected device will no longer work with registered responders.

ARGUMENT:: device
Device to disconnect

METHOD:: connectAll
Connect all devices

METHOD:: disconnectAll
Disconnect all devices


SUBSECTION::Spoofing actions

METHOD:: doGridKeyAction
(describe method here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: state
(describe argument here)

ARGUMENT:: device
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: doEncDeltaAction
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: delta
(describe argument here)

ARGUMENT:: device
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: doEncKeyAction
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: state
(describe argument here)

ARGUMENT:: device
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: doTiltAction
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: z
(describe argument here)

ARGUMENT:: device
(describe argument here)

returns:: (describe returnvalue here)


SUBSECTION::Instantiating SerialOSCClient

METHOD:: new
(describe method here)

ARGUMENT:: name
(describe argument here)

ARGUMENT:: gridSpec
(describe argument here)

ARGUMENT:: encSpec
(describe argument here)

ARGUMENT:: func
(describe argument here)

ARGUMENT:: autoconnect
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: grid
(describe method here)

ARGUMENT:: name
(describe argument here)

ARGUMENT:: func
(describe argument here)

ARGUMENT:: spec
(describe argument here)

ARGUMENT:: autoconnect
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: enc
(describe method here)

ARGUMENT:: name
(describe argument here)

ARGUMENT:: func
(describe argument here)

ARGUMENT:: spec
(describe argument here)

ARGUMENT:: autoconnect
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: gridEnc
(describe method here)

ARGUMENT:: name
(describe argument here)

ARGUMENT:: func
(describe argument here)

ARGUMENT:: gridSpec
(describe argument here)

ARGUMENT:: encSpec
(describe argument here)

ARGUMENT:: autoconnect
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: all
A list of currently instantiated SerialOSCClients

returns:: An Array of SerialOSCClient

METHOD:: freeAll
Frees all registered SerialOSCClient instances

METHOD:: route
Route a device to a client

ARGUMENT:: device
Device to route

ARGUMENT:: client
Client to route device to



SUBSECTION::Matching encoders and grids with enc- and gridSpecs

METHOD:: findGrid
(describe method here)

ARGUMENT:: gridSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: findEnc
(describe method here)

ARGUMENT:: encSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: gridMatchSpec
(describe method here)

ARGUMENT:: grid
(describe argument here)

ARGUMENT:: gridSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: encMatchSpec
(describe method here)

ARGUMENT:: enc
(describe argument here)

ARGUMENT:: encSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: defaultGridIfFree
(describe method here)

returns:: (describe returnvalue here)

METHOD:: defaultEncIfFree
(describe method here)

returns:: (describe returnvalue here)

METHOD:: freeGrids
(describe method here)

returns:: (describe returnvalue here)

METHOD:: freeEncs
(describe method here)

returns:: (describe returnvalue here)

METHOD:: defaultEncIfFreeAndMatching
(describe method here)

ARGUMENT:: encSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: defaultGridIfFreeAndMatching
(describe method here)

ARGUMENT:: gridSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: firstFreeGridMatching
(describe method here)

ARGUMENT:: gridSpec
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: firstFreeEncMatching
(describe method here)

ARGUMENT:: encSpec
(describe argument here)

returns:: (describe returnvalue here)




SUBSECTION::Events handling

METHOD:: addSerialOSCRecvFunc
TODO: Register a Function to be evaluated whenever SuperCollider language (the client) receives an OSC message. This will not overwrite any previously registered functions.

ARGUMENT:: func
TODO: A link::Classes/Function:: or similar object to be added. When evaluated, this function will be passed the arguments msg, time, replyAddr, and recvPort, corresponding to the message itself as an Array, the time the message was sent, the NetAddr of the sender, and the port on which the message was received.

METHOD:: removeSerialOSCRecvFunc
TODO: Remove a Function from the list of those evaluated whenever SuperCollider language (the client) receives an OSC message. This will leave any other registered functions in place.

ARGUMENT:: func
A link::Classes/Function:: or similar object to be removed.


INSTANCEMETHODS::

METHOD:: name
Returns client name

METHOD:: autoconnect
Answers whether this client autoconnects to devices connected to SerialOSCClient.

returns:: A Boolean

METHOD:: gridSpec
Symbol, Dictionary of Association (TODO?) stating the grid requirements for this client.

METHOD:: encSpec
Symbol, Dictionary of Association (TODO?) stating the enc requirements for this client.

METHOD:: grid
Grid currently routed to this client, if any 

returns:: A SerialOSCGrid

METHOD:: enc
Enc currently routed to this client, if any 

returns:: A SerialOSCEnc

METHOD:: refreshGrid
Clears leds of grid currently routed to client and invokes gridRefreshAction to refresh leds.

METHOD:: refreshEnc
Clears leds of enc currently routed to client and invokes encRefreshAction to refresh leds.

METHOD:: usesGrid
Answers whether this client is designed and can be used with a grid

returns:: A Boolean

METHOD:: usesEnc
Answers whether this client is designed and can be used with a grid

returns:: A Boolean

METHOD:: unrouteGridFromClient
(describe method here)

returns:: (describe returnvalue here)

METHOD:: unrouteEncFromClient
(describe method here)

returns:: (describe returnvalue here)

METHOD:: free
Frees the client: disposes all resources, frees all responders. Invokes funcs (if any) willFree before freeing and onFree after.

METHOD:: permanent
If false, CmdPeriod will free the client. The default is false.


SUBSECTION::Matching encoders and grids with enc- and gridSpecs

METHOD:: findAndRouteUnusedDevicesToClient
(describe method here)

returns:: (describe returnvalue here)

METHOD:: findAndRouteAnyUnusedEncToClient
(describe method here)

returns:: (describe returnvalue here)

METHOD:: findAndRouteAnyUnusedGridToClient
(describe method here)

returns:: (describe returnvalue here)

METHOD:: warnIfGridDoNotMatchSpec
(describe method here)

returns:: (describe returnvalue here)

METHOD:: warnIfEncDoNotMatchSpec
(describe method here)

returns:: (describe returnvalue here)


SUBSECTION::Callback functions

METHOD:: willFree
An action object evaluated before the client is freed.

METHOD:: onFree
The action object to be evaluated when the client is freed.

METHOD:: onGridConnected
Func called when a new grid is routed (TODO: rename to onGridRouted?)

METHOD:: onGridDisconnected
Func called when a grid is unrouted (TODO: rename to onGridUnrouted?)

METHOD:: onEncConnected
Func called when a new enc is routed (TODO: rename to onEncRouted?)

METHOD:: onEncDisconnected
Func called when a new enc is unrouted (TODO: rename to onEncUnrouted?)

METHOD:: gridRefreshAction
Func called when a grid is refreshed, explicitly or upon being routed to client.

METHOD:: encRefreshAction
Func called when a enc is refreshed, explicitly or upon being routed to client.


SUBSECTION::Responders

METHOD:: gridKeyAction
(describe method here)

returns:: (describe returnvalue here)

METHOD:: encDeltaAction
(describe method here)

returns:: (describe returnvalue here)

METHOD:: encKeyAction
(describe method here)

returns:: (describe returnvalue here)

METHOD:: tiltAction
(describe method here)

returns:: (describe returnvalue here)


SUBSECTION::Tilt control

METHOD:: enableTilt
(describe method here)

ARGUMENT:: n
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: disableTilt
(describe method here)

ARGUMENT:: n
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: tiltSet
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: state
(describe argument here)

returns:: (describe returnvalue here)


SUBSECTION::Led state

METHOD:: clearLeds
Clears leds of enc currently routed to client.

METHOD:: clearRings
Clears leds of grid currently routed to client.

METHOD:: ledIntensity
(describe method here)

ARGUMENT:: i
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledMap
(describe method here)

ARGUMENT:: xOffset
(describe argument here)

ARGUMENT:: yOffset
(describe argument here)

ARGUMENT:: bitmasks
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledLevelCol
(describe method here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: yOffset
(describe argument here)

ARGUMENT:: levels
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledLevelMap
(describe method here)

ARGUMENT:: xOffset
(describe argument here)

ARGUMENT:: yOffset
(describe argument here)

ARGUMENT:: levels
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ringSet
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: level
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ringMap
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: levels
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledSet
(describe method here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: state
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ringRange
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: x1
(describe argument here)

ARGUMENT:: x2
(describe argument here)

ARGUMENT:: level
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledLevelSet
(describe method here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: l
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledLevelAll
(describe method here)

ARGUMENT:: l
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledAll
(describe method here)

ARGUMENT:: state
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ringAll
(describe method here)

ARGUMENT:: n
(describe argument here)

ARGUMENT:: level
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledCol
(describe method here)

ARGUMENT:: x
(describe argument here)

ARGUMENT:: yOffset
(describe argument here)

ARGUMENT:: bitmasks
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledRow
(describe method here)

ARGUMENT:: xOffset
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: bitmasks
(describe argument here)

returns:: (describe returnvalue here)

METHOD:: ledLevelRow
(describe method here)

ARGUMENT:: xOffset
(describe argument here)

ARGUMENT:: y
(describe argument here)

ARGUMENT:: levels
(describe argument here)

returns:: (describe returnvalue here)


EXAMPLES::

code::
(some example code)
::
