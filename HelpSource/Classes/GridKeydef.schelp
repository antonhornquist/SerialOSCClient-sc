TITLE:: GridKeydef
summary:: Responder for key state change messages from SerialOSCGrid devices connected to SerialOSCClient in a global dictionary
categories:: External Control
related:: Classes/GridKeyFunc

DESCRIPTION::
GridKeydef provides a global reference to the functionality of its superclass GridKeyFunc. Essentially it stores itself at a key within a global dictionary, allowing replacement at any time. Most methods are inherited from its superclass.


CLASSMETHODS::

METHOD:: new
Create a new, enabled GridKeydef. If a GridKeydef already exists at this key, its parameters will be replaced with the ones provided (args for which nil is passed will use the old values).

ARGUMENT:: key
The key at which to store this GridKeydef in the global collection. Generally this will be a Symbol.

ARGUMENT:: func
A link::Classes/Function:: or similar object which will respond to the incoming message. When evaluated it will be passed the arguments x, y, state, timestamp and device, corresponding to the x and y coord of the button affected, the new key state (1 for key down, 0 for key up), the time of the event and the grid device originating the message.

ARGUMENT:: x
An Integer indicating the button column for this GridKeydef. This can be an array. If nil, the GridKeydef will respond to messages received on all columns.

ARGUMENT:: y
An Integer indicating the button row for this GridKeydef. This can be an array. If nil, the GridKeydef will respond to messages received on all rows.

ARGUMENT:: state
An Integer indicating the key state for this GridKeydef. If nil, the GridKeydef will respond to both key down and key up messages.

ARGUMENT:: device
A link::Classes/SerialOSCGrid::, link::Classes/Association:: (with key 'id', 'port', 'type' or 'client') or the link::Classes/Symbol:: 'default' used to match the grid device originating a message. If nil, the GridKeydef will respond to messages received from all sources. See detailed examples below.

returns:: An instance of GridKeydef

METHOD:: press
A convenience method to create a new GridKeydef which responds to key down messages. See *new for argument descriptions.

returns:: A new instance of GridKeydef which responds to key down messages

METHOD:: release
A convenience method to create a new GridKeydef which responds to key up messages. See *new for argument descriptions.

returns:: A new instance of GridKeydef which responds to key up messages

METHOD:: all
Get the global dictionary of all GridKeydefs.

returns:: An link::Classes/IdentityDictionary::.

METHOD:: freeAll
Clears and deactivates all defs from the global collection.


INSTANCEMETHODS::

METHOD:: key
Get this def's key.

returns:: Usually a link::Classes/Symbol::.

METHOD:: free
Clears this def from the global collection and deactivates it.


EXAMPLES::

code::
SerialOSCClient.init;

// Press keys on grid connected to SerialOSCClient to test responders below

(
GridKeydef(\test, { |x, y, state, timestamp, device|
	"what: % at (%,%), from: %, when: %".format(
		if (state == 1, "key down", "key up"),
		x,
		y,
		device,
		timestamp
	).postln
});
)

GridKeydef(\test).free; // or CmdPeriod

// GridKeydef works like GridKeyFunc. Refer to the Help File of that class.
::
